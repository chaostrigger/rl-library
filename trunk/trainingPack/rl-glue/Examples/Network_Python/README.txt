This example is to show how RL-Glue can be used to compile agents, environments and experiments written in Python separately and use sockets to communicate with the RL-Glue. This socketed approach to compilation provides an advantage in two ways. Firstly, the pieces can be plugged in and out and easily swapped with other authors. Secondly, the different pieces can be on different computers and connect to the Glue over the internet. 

This example includes a SarsaAgent and a mines environment (as well as a generic sample experiment program). To compile the project and run it you will need to type make in your terminal. This will cause the script in the makefile to run and compile the sample agent, environment, experiment, and the RL-Glue. Four executables will appear in your bin folder called: RL_glue, RL_agent, RL_environment, RL_experiment. Run RL_glue by typing ./RL_glue into the terminal. Run RL_agent, RL_environment, and RL_experiment from wherever you like and in whatever order you please. You can disconnect and reattach different pieces until all three are connected. Once all three have been detected, the glue will begin to run the experiment.

You can change the compiler by changing the CC variable. You can remove or add any compiler flags you like (CFLAGS) however you must leave in -I$(RL-GLUE) so the compiler knows to look for code in the RL-Glue directory. If you move this experiment folder to another part of your computer, ensure your RL-GLUE variable in the makefile still points to where the RL-Glue directory is located. 

Good luck! Feel free to modify and borrow bits of this code for your own agents, environments and experiments. 
